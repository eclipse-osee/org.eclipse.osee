/*********************************************************************
 * Copyright (c) 2021 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/

import { applicabilitySentinel } from '@osee/applicability/types';
import {
	ArrayHeaderPlatformType,
	PlatformTypeSentinel,
} from '@osee/messaging/shared/enumerations';
import type {
	element,
	elementWithPathsAndButtons,
} from '@osee/messaging/shared/types';

export const elementSearch1: element[] = [
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '0' as `${number}`,
		gammaId: '1' as `${number}`,
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'name',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		beginByte: 0,
		beginWord: 0,
		endByte: 0,
		endWord: 0,
		autogenerated: false,
		elementSizeInBits: 0,
		elementSizeInBytes: 0,
		applicability: applicabilitySentinel,
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '1' as `${number}`,
		gammaId: '2' as `${number}`,
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'name1',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		beginByte: 0,
		beginWord: 0,
		endByte: 0,
		endWord: 0,
		autogenerated: false,
		elementSizeInBits: 0,
		elementSizeInBytes: 0,
		applicability: applicabilitySentinel,
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '2' as `${number}`,
		gammaId: '3' as `${number}`,
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'name2',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		beginByte: 0,
		beginWord: 0,
		endByte: 0,
		endWord: 0,
		autogenerated: false,
		elementSizeInBits: 0,
		elementSizeInBytes: 0,
		applicability: applicabilitySentinel,
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '0' as `${number}`,
		gammaId: '4' as `${number}`,
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'name2',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		beginByte: 0,
		beginWord: 0,
		endByte: 0,
		endWord: 0,
		autogenerated: false,
		elementSizeInBits: 0,
		elementSizeInBytes: 0,
		applicability: applicabilitySentinel,
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
];

export const elementSearch2: element[] = [
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '3',
		gammaId: '5',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title0',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '1',
		gammaId: '6',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title2',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '5',
		gammaId: '7',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title2',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '0',
		gammaId: '8',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title3',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
];

export const elementSearch3: elementWithPathsAndButtons[] = [
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '0',
		gammaId: '8',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title0',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		paths: ['path 1'],
		buttonNames: ['name 1'],
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '1',
		gammaId: '9',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title1',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		paths: ['path 1', 'path2'],
		buttonNames: ['name 1', 'name2'],
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '2',
		gammaId: '10',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title2',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		paths: [],
		buttonNames: [],
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
	//TODO: Ryan B. fix the types so that header element stuff doesn't exist anymore or something...this is a bad type
	//@ts-ignore
	{
		id: '3',
		gammaId: '11',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'Title3',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: false,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		paths: ['path 1'],
		buttonNames: ['name 1'],
		platformType: new PlatformTypeSentinel(),
		arrayElements: [],
	},
];

export const elementSearch4: element[] = [
	{
		id: '0',
		gammaId: '12',
		name: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847088',
			gammaId: '-1' as `${number}`,
			value: 'name',
		},
		description: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847090',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		notes: {
			id: '-1' as `${number}`,
			typeId: '1152921504606847085',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementAlterable: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225788',
			gammaId: '-1' as `${number}`,
			value: true,
		},
		interfaceElementBlockData: {
			id: '-1' as `${number}`,
			typeId: '1523923981411079299',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementArrayHeader: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964923',
			gammaId: '-1' as `${number}`,
			//@ts-ignore
			value: true,
		},
		interfaceElementWriteArrayHeaderName: {
			id: '-1' as `${number}`,
			typeId: '3313203088521964924',
			gammaId: '-1' as `${number}`,
			value: false,
		},
		interfaceElementIndexEnd: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225802',
			gammaId: '-1' as `${number}`,
			value: 1,
		},
		interfaceElementIndexStart: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225801',
			gammaId: '-1' as `${number}`,
			value: 0,
		},
		interfaceDefaultValue: {
			id: '-1' as `${number}`,
			typeId: '2886273464685805413',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		interfaceElementArrayIndexOrder: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472581',
			gammaId: '-1' as `${number}`,
			value: 'OUTER_INNER',
		},
		interfaceElementArrayIndexDelimiterOne: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472582',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		interfaceElementArrayIndexDelimiterTwo: {
			id: '-1' as `${number}`,
			typeId: '6818939106523472583',
			gammaId: '-1' as `${number}`,
			value: ' ',
		},
		enumLiteral: {
			id: '-1' as `${number}`,
			typeId: '2455059983007225803',
			gammaId: '-1' as `${number}`,
			value: '',
		},
		beginByte: 0,
		beginWord: 0,
		endByte: 0,
		endWord: 0,
		autogenerated: false,
		elementSizeInBits: 0,
		elementSizeInBytes: 0,
		platformType: new ArrayHeaderPlatformType(),
		arrayElements: [
			{
				id: '1',
				gammaId: '12',
				name: {
					id: '-1' as `${number}`,
					typeId: '1152921504606847088',
					gammaId: '-1' as `${number}`,
					value: 'name1',
				},
				description: {
					id: '-1' as `${number}`,
					typeId: '1152921504606847090',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				notes: {
					id: '-1' as `${number}`,
					typeId: '1152921504606847085',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				interfaceElementAlterable: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225788',
					gammaId: '-1' as `${number}`,
					value: true,
				},
				interfaceElementBlockData: {
					id: '-1' as `${number}`,
					typeId: '1523923981411079299',
					gammaId: '-1' as `${number}`,
					value: false,
				},
				interfaceElementArrayHeader: {
					id: '-1' as `${number}`,
					typeId: '3313203088521964923',
					gammaId: '-1' as `${number}`,
					//@ts-ignore
					value: false,
				},
				interfaceElementWriteArrayHeaderName: {
					id: '-1' as `${number}`,
					typeId: '3313203088521964924',
					gammaId: '-1' as `${number}`,
					value: false,
				},
				interfaceElementIndexEnd: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225802',
					gammaId: '-1' as `${number}`,
					value: 1,
				},
				interfaceElementIndexStart: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225801',
					gammaId: '-1' as `${number}`,
					value: 0,
				},
				interfaceDefaultValue: {
					id: '-1' as `${number}`,
					typeId: '2886273464685805413',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				interfaceElementArrayIndexOrder: {
					id: '-1' as `${number}`,
					typeId: '6818939106523472581',
					gammaId: '-1' as `${number}`,
					value: 'OUTER_INNER',
				},
				interfaceElementArrayIndexDelimiterOne: {
					id: '-1' as `${number}`,
					typeId: '6818939106523472582',
					gammaId: '-1' as `${number}`,
					value: ' ',
				},
				interfaceElementArrayIndexDelimiterTwo: {
					id: '-1' as `${number}`,
					typeId: '6818939106523472583',
					gammaId: '-1' as `${number}`,
					value: ' ',
				},
				enumLiteral: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225803',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				beginByte: 0,
				beginWord: 0,
				endByte: 0,
				endWord: 0,
				autogenerated: false,
				elementSizeInBits: 0,
				elementSizeInBytes: 0,
				platformType: new PlatformTypeSentinel(),
				arrayElements: [],
				applicability: applicabilitySentinel,
			},
			{
				id: '2',
				gammaId: '13',
				name: {
					id: '-1' as `${number}`,
					typeId: '1152921504606847088',
					gammaId: '-1' as `${number}`,
					value: 'name2',
				},
				description: {
					id: '-1' as `${number}`,
					typeId: '1152921504606847090',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				notes: {
					id: '-1' as `${number}`,
					typeId: '1152921504606847085',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				interfaceElementAlterable: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225788',
					gammaId: '-1' as `${number}`,
					value: true,
				},
				interfaceElementBlockData: {
					id: '-1' as `${number}`,
					typeId: '1523923981411079299',
					gammaId: '-1' as `${number}`,
					value: false,
				},
				interfaceElementArrayHeader: {
					id: '-1' as `${number}`,
					typeId: '3313203088521964923',
					gammaId: '-1' as `${number}`,
					//@ts-ignore
					value: false,
				},
				interfaceElementWriteArrayHeaderName: {
					id: '-1' as `${number}`,
					typeId: '3313203088521964924',
					gammaId: '-1' as `${number}`,
					value: false,
				},
				interfaceElementIndexEnd: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225802',
					gammaId: '-1' as `${number}`,
					value: 1,
				},
				interfaceElementIndexStart: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225801',
					gammaId: '-1' as `${number}`,
					value: 0,
				},
				interfaceDefaultValue: {
					id: '-1' as `${number}`,
					typeId: '2886273464685805413',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				interfaceElementArrayIndexOrder: {
					id: '-1' as `${number}`,
					typeId: '6818939106523472581',
					gammaId: '-1' as `${number}`,
					value: 'OUTER_INNER',
				},
				interfaceElementArrayIndexDelimiterOne: {
					id: '-1' as `${number}`,
					typeId: '6818939106523472582',
					gammaId: '-1' as `${number}`,
					value: ' ',
				},
				interfaceElementArrayIndexDelimiterTwo: {
					id: '-1' as `${number}`,
					typeId: '6818939106523472583',
					gammaId: '-1' as `${number}`,
					value: ' ',
				},
				enumLiteral: {
					id: '-1' as `${number}`,
					typeId: '2455059983007225803',
					gammaId: '-1' as `${number}`,
					value: '',
				},
				beginByte: 0,
				beginWord: 0,
				endByte: 0,
				endWord: 0,
				autogenerated: false,
				elementSizeInBits: 0,
				elementSizeInBytes: 0,
				platformType: new PlatformTypeSentinel(),
				arrayElements: [],
				applicability: applicabilitySentinel,
			},
		],
		applicability: applicabilitySentinel,
	},
];
