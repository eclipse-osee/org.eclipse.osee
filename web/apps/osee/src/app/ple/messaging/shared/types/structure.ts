/*********************************************************************
 * Copyright (c) 2021 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/
import type { applic } from '@osee/applicability/types';
import type { difference, hasChanges } from '@osee/shared/types/change-report';
import type { element } from './element';
import { attribute } from '@osee/attributes/types';
import { ATTRIBUTETYPEIDENUM } from '@osee/attributes/constants';

export type structure = structureAttributes &
	Partial<computedStructureAttributes> & {
		id: `${number}`;
		gammaId: `${number}`;
		elements: element[];
		applicability: applic;
		added?: boolean;
		deleted?: boolean;
		hasElementChanges?: boolean;
		changes?: structureChanges;
	};

export type computedStructureAttributes = {
	numElements: number;
	sizeInBytes: number;
	bytesPerSecondMinimum: number;
	bytesPerSecondMaximum: number;
	incorrectlySized: boolean;
	autogenerated: boolean;
};

export type structureAttributes = {
	name: Required<attribute<string, typeof ATTRIBUTETYPEIDENUM.NAME>>;
	nameAbbrev: Required<
		attribute<string, typeof ATTRIBUTETYPEIDENUM.NAMEABBREV>
	>;
	description: Required<
		attribute<string, typeof ATTRIBUTETYPEIDENUM.DESCRIPTION>
	>;
	interfaceMaxSimultaneity: Required<
		attribute<string, typeof ATTRIBUTETYPEIDENUM.INTERFACEMAXSIMULTANEITY>
	>;
	interfaceMinSimultaneity: Required<
		attribute<string, typeof ATTRIBUTETYPEIDENUM.INTERFACEMINSIMULTANEITY>
	>;
	interfaceTaskFileType: Required<
		attribute<number, typeof ATTRIBUTETYPEIDENUM.INTERFACETASKFILETYPE>
	>;
	interfaceStructureCategory: Required<
		attribute<string, typeof ATTRIBUTETYPEIDENUM.INTERFACESTRUCTURECATEGORY>
	>;
};

export type structureChanges = hasChanges<structureAttributes> & {
	applicability?: difference<applic>;
	numElements?: boolean;
};

export type displayableStructureFields = structureAttributes & {
	applicability: applic;
} & computedStructureAttributes & {};
export type structureWithChanges = Required<structure> & {};
