/*********************************************************************
 * Copyright (c) 2023 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/
import { Component, Inject } from '@angular/core';
import {
	MAT_DIALOG_DATA,
	MatDialog,
	MatDialogActions,
	MatDialogClose,
	MatDialogContent,
	MatDialogRef,
	MatDialogTitle,
} from '@angular/material/dialog';
import { ElementFormComponent } from '../../forms/element-form/element-form.component';

import { MatButton } from '@angular/material/button';
import { ElementDialog, element } from '@osee/messaging/shared/types';

@Component({
	selector: 'osee-edit-element-dialog',
	standalone: true,
	imports: [
		MatDialogTitle,
		MatDialogContent,
		MatDialogActions,
		MatButton,
		MatDialogClose,
		ElementFormComponent,
	],
	templateUrl: './edit-element-dialog.component.html',
	styles: [],
})
export class EditElementDialogComponent {
	constructor(
		public dialog: MatDialog,
		public dialogRef: MatDialogRef<EditElementDialogComponent>,
		@Inject(MAT_DIALOG_DATA) public data: ElementDialog
	) {
		if (this._isFullElement(this.data.element))
			this._cleanElement(this.data.element);
	}
	closeDialog() {
		this.dialogRef.close();
	}
	private _isFullElement(
		value: Partial<element> | element | Required<element>
	): value is element {
		return value?.id !== undefined;
	}
	private _cleanElement(_element: element) {
		delete _element.beginByte;
		delete _element.beginWord;
		delete _element.endByte;
		delete _element.endWord;
		delete _element.autogenerated;
		delete _element.logicalType;
		delete _element.interfacePlatformTypeDescription;
		delete _element.units;
		delete _element.interfacePlatformTypeMaxval;
		delete _element.interfacePlatformTypeMinval;
		delete _element.elementSizeInBits;
		delete _element.elementSizeInBytes;
	}
}
