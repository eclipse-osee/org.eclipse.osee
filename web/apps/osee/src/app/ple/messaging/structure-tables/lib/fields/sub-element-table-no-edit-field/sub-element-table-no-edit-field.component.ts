/*********************************************************************
 * Copyright (c) 2021 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/
import { Component, computed, inject, input } from '@angular/core';
import { toSignal } from '@angular/core/rxjs-interop';
import { MatAnchor } from '@angular/material/button';
import { MatLabel } from '@angular/material/form-field';
import { RouterLink } from '@angular/router';
import { applic } from '@osee/applicability/types';
import { ATTRIBUTETYPEID } from '@osee/attributes/constants';
import { AttributeToValuePipe } from '@osee/attributes/pipes';
import { attribute } from '@osee/attributes/types';
import {
	DisplayableElementProps,
	PlatformType,
	arrayIndexOrder,
	type element,
} from '@osee/messaging/shared/types';
import { UiService } from '@osee/shared/services';
import { SubElementTableNoEditFieldDynamicWidthComponent } from '../sub-element-table-no-edit-field-dynamic-width/sub-element-table-no-edit-field-dynamic-width.component';
import { SubElementTableNoEditFieldFilteredComponent } from '../sub-element-table-no-edit-field-filtered/sub-element-table-no-edit-field-filtered.component';
import { SubElementTableNoEditFieldNameComponent } from '../sub-element-table-no-edit-field-name/sub-element-table-no-edit-field-name.component';

@Component({
	selector: 'osee-messaging-sub-element-table-no-edit-field',
	templateUrl: './sub-element-table-no-edit-field.component.html',
	styles: [':host{display: block;width: 100%;height: 100%;}'],
	standalone: true,
	imports: [
		SubElementTableNoEditFieldDynamicWidthComponent,
		SubElementTableNoEditFieldFilteredComponent,
		SubElementTableNoEditFieldNameComponent,
		RouterLink,
		MatLabel,
		MatAnchor,
		AttributeToValuePipe,
	],
})
export class SubElementTableNoEditFieldComponent {
	filter = input('');
	element = input.required<element>();
	header = input.required<keyof DisplayableElementProps>();
	width = input('');

	protected displayValue = computed(() => {
		const _hdr = this.header();
		const _element = this.element();
		if (
			_hdr === 'description' ||
			_hdr === 'notes' ||
			_hdr === 'enumLiteral' ||
			_hdr === 'name' ||
			_hdr === 'interfaceElementIndexEnd' ||
			_hdr === 'interfaceElementIndexStart' ||
			_hdr === 'interfaceElementAlterable' ||
			_hdr === 'interfaceElementBlockData' ||
			_hdr === 'interfaceDefaultValue' ||
			_hdr === 'interfaceElementWriteArrayHeaderName' ||
			_hdr === 'interfaceElementArrayIndexOrder' ||
			_hdr === 'interfaceElementArrayIndexDelimiterOne' ||
			_hdr === 'interfaceElementArrayIndexDelimiterTwo' ||
			_hdr === 'interfaceElementArrayHeader' ||
			_hdr === 'platformType' ||
			_hdr === 'beginByte' ||
			_hdr === 'beginWord' ||
			_hdr === 'endByte' ||
			_hdr === 'endWord'
		) {
			return _element[_hdr];
		}
		if (
			_hdr === 'interfaceLogicalType' ||
			_hdr === 'interfacePlatformType2sComplement' ||
			_hdr === 'interfacePlatformTypeAnalogAccuracy' ||
			_hdr === 'interfacePlatformTypeBitsResolution' ||
			_hdr === 'interfacePlatformTypeBitSize' ||
			_hdr === 'interfacePlatformTypeCompRate' ||
			_hdr === 'interfacePlatformTypeMaxval' ||
			_hdr === 'interfacePlatformTypeMinval' ||
			_hdr === 'interfacePlatformTypeMsbValue' ||
			_hdr === 'interfacePlatformTypeUnits' ||
			_hdr === 'interfacePlatformTypeValidRangeDescription'
		) {
			return _element.platformType[_hdr];
		}
		if (_hdr === 'applicability') {
			return _element.applicability.name;
		}
		if (_hdr === 'enumSet' || _hdr === 'autogenerated') {
			return {
				id: '-1',
				typeId: '-1' as ATTRIBUTETYPEID,
				gammaId: '-1',
				value: '',
			} as attribute<string, ATTRIBUTETYPEID>;
		}
		return _element[_hdr];
	});
	private _shouldDisplayDynamicWidth = computed(() => {
		const _hdr = this.header();
		return (
			_hdr === 'description' || _hdr === 'notes' || _hdr === 'enumLiteral'
		);
	});
	protected shouldDisplayDynamicWidth(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is attribute<string, ATTRIBUTETYPEID> {
		return this._shouldDisplayDynamicWidth();
	}

	private _shouldDisplayName = computed(() => {
		const _hdr = this.header();
		return _hdr === 'name';
	});

	protected shouldDisplayName(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is attribute<string, ATTRIBUTETYPEID> {
		return this._shouldDisplayName();
	}
	private _shouldDisplayNonAutogeneratedPlatformType = computed(() => {
		const _hdr = this.header();
		const el = this.element();
		return (
			(_hdr === 'platformType' &&
				el.autogenerated !== undefined &&
				!el.autogenerated) ||
			el.autogenerated === undefined
		);
	});

	protected shouldDisplayNonAutogeneratedPlatformType(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is PlatformType {
		return this._shouldDisplayNonAutogeneratedPlatformType();
	}
	private _shouldDisplayAutogeneratedPlatformType = computed(() => {
		const _hdr = this.header();
		const el = this.element();
		return (
			_hdr === 'platformType' &&
			el.autogenerated !== undefined &&
			el.autogenerated
		);
	});

	protected shouldDisplayAutogeneratedPlatformType(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is PlatformType {
		return this._shouldDisplayAutogeneratedPlatformType();
	}
	private _shouldDisplayApplicability = computed(() => {
		const _hdr = this.header();
		return _hdr === 'applicability';
	});
	protected shouldDisplayApplicability(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is applic {
		return this._shouldDisplayApplicability();
	}

	private _shouldDisplayNumber = computed(() => {
		const _hdr = this.header();
		return (
			_hdr === 'beginByte' ||
			_hdr === 'beginWord' ||
			_hdr === 'endByte' ||
			_hdr === 'endWord'
		);
	});

	protected shouldDisplayNumber(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is number {
		return this._shouldDisplayNumber();
	}

	private _shouldDisplayRemaining = computed(() => {
		const _hdr = this.header();
		return !(_hdr === 'enumSet' || _hdr === 'autogenerated');
	});
	protected shouldDisplayRemaining(
		value:
			| attribute<string, ATTRIBUTETYPEID>
			| attribute<boolean, ATTRIBUTETYPEID>
			| attribute<number, ATTRIBUTETYPEID>
			| attribute<arrayIndexOrder, ATTRIBUTETYPEID>
			| `${number}`
			| string
			| number
			| applic
			| PlatformType
			| undefined
	): value is attribute<string, ATTRIBUTETYPEID> {
		return this._shouldDisplayRemaining();
	}

	private uiService = inject(UiService);
	protected branchId = toSignal(this.uiService.id, { initialValue: '' });
	protected branchType = toSignal(this.uiService.type, { initialValue: '' });
}
