name: Build Java-Rust FFI

on:
  push:
    branches:
      - main  # Trigger the build on push to main

jobs:
  rust-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]   # Build Rust on both Linux and Windows
      fail-fast: true  # Stop running if one matrix fails

    steps:
    # Checkout the repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Rust
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    # Install dependencies on Windows for Rust to work (for Windows only)
    - name: Install dependencies on Windows
      if: runner.os == 'Windows'
      run: |
        choco install mingw

    # Run cargo build and check for warnings/errors
    - name: Build Rust native libraries and check for warnings/errors
      run: |
        cd /plugins/org.eclipse.osee.framework.core/scripts
        cargo build --release 2>&1 | tee cargo_output.log

        # Check for errors or warnings in the cargo output
        if grep -q "error:" cargo_output.log || grep -q "warning:" cargo_output.log; then
          echo "Cargo build failed due to errors or warnings."
          exit 1
        fi
      shell: bash

  jar-build:
    needs: rust-build  # The JAR build only runs if the rust-build job succeeds
    runs-on: ubuntu-latest  # Run the Java-JAR build only on Linux

    strategy:
      matrix:
        java-version: [8, 11]  # Build with both Java 8 and Java 11
      fail-fast: true  # Stop running if one matrix fails

    steps:
    # Checkout the repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Java
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java-version }}

    # Run the build script and pass the Java version
    - name: Run build_java_rust_ffi_jar.sh
      run: |
        cd /plugins/org.eclipse.osee.framework.core/scripts
        bash build_java_rust_ffi_jar.sh ${{ matrix.java-version }} | tee output.log
        if grep -i "fail" output.log; then
          echo "Build script failed due to a 'fail' message in the output."
          exit 1
        fi
      shell: bash

# Separate job for deployment triggered only on merge to main
name: Deploy Java-Rust FFI JAR

on:
  pull_request:
    types: [closed]  # Triggers when a pull request is closed (merged)
    branches:
      - main         # Only trigger on the main branch

jobs:
  deploy:
    if: github.event.pull_request.merged == true  # Ensure the action only runs on merge

    runs-on: ubuntu-latest  # Only need one OS for deployment (Linux is fine)

    steps:
    # Checkout the repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Copy the generated JAR files for Java 8 and Java 11 to the libs directory
    - name: Deploy JARs to libs directory
      run: |
        DEST_PATH="/plugins/org.eclipse.osee.framework.core/libs"
        for JAVA_VERSION in 8 11; do
          JAR_PATH="/plugins/org.eclipse.osee.framework.core/scripts/java_rust_ffi/java_rust_ffi_java_${JAVA_VERSION}.jar"
          if [ -f "$JAR_PATH" ]; then
            cp "$JAR_PATH" "$DEST_PATH/"
            echo "Java ${JAVA_VERSION} JAR file copied to libs directory."
          else
            echo "Java ${JAVA_VERSION} JAR file not found."
            exit 1
          fi
        done
