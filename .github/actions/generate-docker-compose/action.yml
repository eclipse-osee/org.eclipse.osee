name: 'Generate docker compose file for e2e testing'
description: Generates a docker compose file to run a docker network for e2e testing.

inputs:
  postgres_image:
    description: Postgres image to use for e2e tests
    default: ghcr.io/eclipse-osee/org.eclipse.osee/osee-postgres:20240711202911
  osee_image:
    description: Osee image to use for e2e tests
    default: ghcr.io/eclipse-osee/org.eclipse.osee/osee-server:latest

runs:
  using: composite

  steps:
    - name: Generate Docker Compose yml
      id: generate_compose
      shell: bash
      run: |
        echo "
        networks:
          osee-network:
            driver: bridge
            labels:
              - osee.network:\"osee\"

        services:
          osee-postgres:
            image: ${{ inputs.postgres_image }}
            networks:
              - osee-network
            healthcheck:
              test: [\"CMD-SHELL\", \"pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 \"]
              interval: 10s
              timeout: 5s
              retries: 5
            environment:
                  POSTGRES_PASSWORD: osee
                  POSTGRES_USER: osee
                  POSTGRES_DB: osee
            ports:
              - 5432:5432
          osee:
            image: ${{ inputs.osee_image }}
            networks:
              - osee-network
            depends_on:
              osee-postgres:
                condition: service_healthy
                restart: true
            ports:
              - \"8089:8089\"
          setup:
            image: alpine/curl:latest
            networks:
              - osee-network
            depends_on:
              - osee
            restart: \"no\"
            entrypoint: [\"sh\",\"-c\",\"sleep 30000 && curl --location 'http://localhost:8089/orcs/datastore/initialize' --header 'Accept-Encoding: application/zip' --header 'Authorization: Basic 3333' --header 'Content-Type: application/json' --data-raw '{\\\"id\\\": \\\"11\\\",\\\"name\\\": \\\"OSEE\\\",\\\"userId\\\": \\\"11\\\",\\\"active\\\": true,\\\"email\\\": \\\"osee@gmail.com\\\",\\\"loginIds\\\": [\\\"11\\\"]}' && curl --location --request POST 'http://localhost:8089/orcs/datastore/synonyms' --header 'Accept-Encoding: application/zip' --header 'Authorization: Basic 3333' && curl --location --request PUT 'http://localhost:8089/ats/config/init/ats' --header 'Accept-Encoding: application/zip' --header 'Authorization: Basic 3333' && curl --location --request PUT 'http://localhost:8089/ats/config/init/demo' --header 'Accept-Encoding: application/zip' --header 'Authorization: Basic 3333' && curl --location 'http://localhost:8089/ats/config/clearcache' --header 'Accept-Encoding: application/zip' --header 'Authorization: Basic 3333'\"]" >docker-compose.yml