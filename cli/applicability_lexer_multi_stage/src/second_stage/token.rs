#[derive(Debug, Clone, PartialEq, Eq, Default)]
pub enum LexerToken<I> {
    #[default]
    Nothing,
    Illegal,
    Identity,
    Text(I),
    // Eof, This path should be illegal now
    StartCommentSingleLine,
    StartCommentMultiLine,
    SingleLineCommentCharacter,
    EndCommentSingleLine,
    EndCommentMultiLine,
    MultilineCommentCharacter,
    Feature,
    FeatureNot,
    FeatureSwitch,
    FeatureCase,
    FeatureElse,
    FeatureElseIf,
    EndFeature,
    Configuration,
    ConfigurationNot,
    ConfigurationSwitch,
    ConfigurationCase,
    ConfigurationElse,
    ConfigurationElseIf,
    EndConfiguration,
    ConfigurationGroup,
    ConfigurationGroupNot,
    ConfigurationGroupSwitch,
    ConfigurationGroupCase,
    ConfigurationGroupElse,
    ConfigurationGroupElseIf,
    EndConfigurationGroup,
    Substitution,
    Space,
    CarriageReturn,
    UnixNewLine,
    Tab,
    //the following should only be tokenized following one of the Feature|Configuration|ConfigurationGroup Base|Not|Switch|Case
    StartBrace,
    EndBrace,
    // the following should only be tokenized following a StartBrace and preceding an EndBrace
    StartParen,
    EndParen,
    Not,
    And,
    Or,
    Tag(I),
}
