openapi: 3.0.1
info:
  title: Artifact Endpoint
  description: Artifact Endpoint definitions
servers:
- url: /orcs
  description: ArtifactEndpoint
  variables: {}
paths:
  /links:
    post:
      operationId: fixLinks
      parameters:
      - name: path
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{branch}/applic/update-from-parent:
    put:
      operationId: addMissingApplicabilityFromParentBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branch/{branch}/applic/blockVisibility:
    post:
      operationId: applyBlockVisibility
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/blockVisibility/{blockApplicId}:
    post:
      operationId: applyBlockVisibilityOnServer
      parameters:
      - name: blockApplicId
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/view/{id}/applic:
    put:
      operationId: createApplicabilityForView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    delete:
      operationId: removeApplicabilityFromView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/cfggroup:
    get:
      operationId: getCfgGroup
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
    put:
      operationId: updateCfgGroup
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigurationGroupDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createCfgGroup
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationGroupDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/feature:
    put:
      operationId: updateFeature
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createFeature
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/product-types:
    get:
      operationId: getProductTypes
      parameters:
      - name: pageNum
        in: query
        schema:
          type: integer
          format: int64
      - name: count
        in: query
        schema:
          type: integer
          format: int64
      - name: orderByAttributeType
        in: query
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductTypeDefinition'
    put:
      operationId: updateProductType
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createProductType
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/view:
    put:
      operationId: updateView
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createView
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/deleteBlockApplicability/{blockApplicId}:
    delete:
      operationId: deleteBlockApplicability
      parameters:
      - name: blockApplicId
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/cfggroup/{id}:
    delete:
      operationId: deleteCfgGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/feature/{id}:
    delete:
      operationId: deleteFeature
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/product-types/{id}:
    get:
      operationId: getProductType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeDefinition'
    delete:
      operationId: deleteProductType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/view/{id}:
    get:
      operationId: getViewApplicabilityTokens
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityToken'
    delete:
      operationId: deleteView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/downloadBlockApplicability/{blockApplicId}:
    get:
      operationId: downloadBlockApplicability
      parameters:
      - name: blockApplicId
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /branch/{branch}/applic/change:
    get:
      operationId: getAffectedBranches_1
      parameters:
      - name: injectiontx
        in: query
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: removaltx
        in: query
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApplicabilityId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchId'
  /branch/{branch}/applic/artifact/reference/{artId}:
    get:
      operationId: getApplicabilitiesReferenced
      parameters:
      - name: artId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityId'
  /branch/{branch}/applic/artifact/reference/token/{artId}:
    get:
      operationId: getApplicabilityReferenceTokens
      parameters:
      - name: artId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityToken'
  /branch/{branch}/applic/artifact/{artId}:
    get:
      operationId: getApplicabilityToken
      parameters:
      - name: artId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicabilityToken'
  /branch/{branch}/applic/applicabilityToken/{id}:
    get:
      operationId: getApplicabilityTokenFromId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicabilityToken'
  /branch/{branch}/applic:
    get:
      operationId: getApplicabilityTokens
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityToken'
  /branch/{branch}/applic/artifacts:
    put:
      operationId: getApplicabilityTokens_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PairArtifactIdApplicabilityToken'
  /branch/{branch}/applic/artifacts/applic:
    get:
      operationId: getApplicabilityUsage
      parameters:
      - name: applic
        in: query
        schema:
          type: string
      - name: artTypes
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactTypeToken'
      - name: attrTypes
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityUseResultToken'
  /branch/{branch}/applic/matrix:
    get:
      operationId: getConfigMatrix
      parameters:
      - name: matrixtype
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{branch}/applic/cfggroup/def/{id}:
    get:
      operationId: getConfigurationGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupDefinition'
  /branch/{branch}/applic/feature/{featureNameOrId}:
    get:
      operationId: getFeature
      parameters:
      - name: featureNameOrId
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureDefinition'
  /branch/{branch}/applic/features:
    get:
      operationId: getFeatureDefinitionData
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureDefinition'
  /branch/{branch}/applic/featureMatrix:
    get:
      operationId: getFeatureMatrixExcel
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: filter
        in: query
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/xml: {}
  /branch/{branch}/applic/versionConfig/{version}:
    get:
      operationId: getVersionConfig
      parameters:
      - name: version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactId'
  /branch/{branch}/applic/view/def/{id}:
    get:
      operationId: getView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateViewDefinition'
  /branch/{branch}/applic/table:
    get:
      operationId: getViewTable
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{branch}/applic/views:
    get:
      operationId: getViews
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/applic/access:
    get:
      operationId: isAccess
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/blockVisibility/refresh:
    post:
      operationId: refreshStagedFiles
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/cfggroup/{groupId}/relate/{viewId}:
    put:
      operationId: relateCfgGroupToView
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: viewId
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/{applicId}:
    put:
      operationId: setApplicability
      parameters:
      - name: applicId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicabilityId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /branch/{branch}/applic/set/{applicTag}:
    put:
      operationId: setApplicabilityByString
      parameters:
      - name: applicTag
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /branch/{branch}/applic/artifact/reference:
    put:
      operationId: setApplicabilityReference
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApplicabilityData'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /branch/{branch}/applic/blockVisibility/startWatcher:
    put:
      operationId: startBlockVisibilityWatcher
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/blockVisibility/stopWatcher:
    put:
      operationId: stopBlockVisibilityWatcher
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/cfggroup/sync:
    post:
      operationId: syncCfgGroup
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/cfggroup/sync/{id}:
    post:
      operationId: syncCfgGroup_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/cfggroup/{groupId}/unrelate/{viewId}:
    put:
      operationId: unrelateCfgGroupToView
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: viewId
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/applic/uploadBlockApplicability:
    post:
      operationId: uploadBlockApplicability
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/octet-stream:
              schema:
                type: string
  /branch/{branch}/applic/uploadRunBlockApplicability:
    post:
      operationId: uploadRunBlockApplicability
      parameters:
      - name: view
        in: query
        schema:
          type: integer
          format: int64
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /branch/{branch}/applic/validate:
    put:
      operationId: validate
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branch/{branch}/artifact/old-type/{oldType}/new-type/{newType}:
    post:
      operationId: changeArtifactType
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: oldType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: newType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/type/{artifactType}/parent/{parent}/create:
    post:
      operationId: createArtifact
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: parent
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/type/{artifactType}/parent/{parent}:
    post:
      operationId: createArtifacts
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: parent
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/{artifact}:
    delete:
      operationId: deleteArtifact
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /branch/{branch}/artifact/exp:
    get:
      operationId: expGetArtifactTokens
      parameters:
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: parent
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/search:
    post:
      operationId: findArtifactIds
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSearchOptions'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactId'
  /branch/{branch}/artifact/search/token:
    post:
      operationId: findArtifactTokens
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSearchOptions'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/{artifactId}:
    get:
      operationId: getArtifactAsHtml
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{branch}/artifact/attType/{attributeType}/id:
    get:
      operationId: getArtifactIdsByAttribute
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactId'
  /branch/{branch}/artifact/type/{artifactType}/id:
    get:
      operationId: getArtifactIdsByType
      parameters:
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactId'
  /branch/{branch}/artifact/map:
    get:
      operationId: getArtifactMaps
      parameters:
      - name: attributeType
        in: query
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: representation
        in: query
        schema:
          type: string
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /branch/{branch}/artifact/table:
    get:
      operationId: getArtifactTable
      parameters:
      - name: attributeType
        in: query
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: attributeColumns
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactTable'
  /branch/{branch}/artifact/{artifactId}/token:
    get:
      operationId: getArtifactToken
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/applicability/{id}:
    get:
      operationId: getArtifactTokensByApplicability
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicabilityId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/attType/{attributeType}/token:
    get:
      operationId: getArtifactTokensByAttribute
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/type/{artifactType}/token:
    get:
      operationId: getArtifactTokensByType
      parameters:
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/{artifactId}/attribute/{attributeId}:
    get:
      operationId: getAttribute
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branch/{branch}/artifact/{artifactId}/attribute/type/{attributeType}:
    get:
      operationId: getAttributeTypeValues
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /branch/{branch}/artifact/{artifactId}/attribute/type/{attributeType}/version/{transactionId}:
    get:
      operationId: getAttributeTypeValuesForTransaction
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /branch/{branch}/artifact/{artifactId}/attribute/type:
    get:
      operationId: getAttributeTypes
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /branch/{branch}/artifact/{artifactId}/attribute/{attributeId}/version/{transactionId}:
    get:
      operationId: getAttributeWithGamma
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branch/{branch}/artifact/{artifactId}/attribute/{attributeId}/version/{transactionId}/text:
    get:
      operationId: getAttributeWithGammaAsText
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branch/{branch}/artifact/{artifactId}/attribute/all:
    get:
      operationId: getAttributes
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDataTransfer'
  /branch/{branch}/artifact/{artifactId}/attribute:
    get:
      operationId: getAttributesAsHtml
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{branch}/artifact/changed_artifacts/{attributeTypeJoin}/{commentPattern}:
    get:
      operationId: getChangedArtifactTokens
      parameters:
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: attributeTypeJoin
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeJoin'
      - name: commentPattern
        in: path
        required: true
        schema:
          type: string
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/artifact/{artifact}/related/maps:
    get:
      summary: Gets a hierarchy tree of Artifacts
      operationId: getRelatedArtifactsTree
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        "200":
          description: Successful
        "400":
          description: Content not found
  /branch/{branch}/artifact:
    get:
      operationId: getRootChildrenAsHtml
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{branch}/artifact/search/v1:
    post:
      operationId: getSearchWithMatrixParams
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
  /branch/{branch}/artifact/{artifact}/attribute/type/{attributeType}:
    put:
      operationId: setSoleAttributeValue
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /branch:
    get:
      operationId: getAsHtml
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/{uuid}:
    get:
      operationId: getAsHtml_1
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branch/nameQuery:
    post:
      operationId: getBranchByName
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchId'
  /branch/{branch}/gc/user/history:
    get:
      operationId: asExecutedCommandHistoryTable
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutedCommandHistory'
  /branch/{branch}/gc/context:
    post:
      operationId: createDefaultContext
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /branch/{branch}/gc/user/commands:
    get:
      operationId: getUserCommands
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserContext'
  /branch/{branch}/relation/createRelationByType/sideA/{sideA}/sideB/{sideB}/relationTypeToken/{relationType}:
    post:
      operationId: createRelationByType
      parameters:
      - name: sideA
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: sideB
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: relationType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RelationTypeToken'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branch/{branch}/relation/getRelatedHierarchy/{artifact}:
    get:
      operationId: getRelatedHierarchy
      parameters:
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/relation/getRelatedRecursive/{artifact}/relationTypeToken/{relationType}:
    get:
      operationId: getRelatedRecursive
      parameters:
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: relationType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RelationTypeToken'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /branch/{branch}/tuple/tuple2:
    get:
      operationId: getTuple2
      parameters:
      - name: tupleType
        in: query
        schema:
          $ref: '#/components/schemas/Tuple2TypeObjectObject'
      - name: e1
        in: query
        schema:
          type: object
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: osee.account.id
        in: header
        schema:
          $ref: '#/components/schemas/UserId'
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                type: integer
                format: int64
    post:
      operationId: addTuple2
      parameters:
      - name: tupleType
        in: query
        schema:
          $ref: '#/components/schemas/Tuple2TypeObjectObject'
      - name: e1
        in: query
        schema:
          type: object
      - name: e2
        in: query
        schema:
          type: object
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: osee.account.id
        in: header
        schema:
          $ref: '#/components/schemas/UserId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GammaId'
  /branch/{branch}/tuple/tuple3:
    post:
      operationId: addTuple3
      parameters:
      - name: tupleType
        in: query
        schema:
          $ref: '#/components/schemas/Tuple3TypeObjectObjectObject'
      - name: e1
        in: query
        schema:
          type: object
      - name: e2
        in: query
        schema:
          type: object
      - name: e3
        in: query
        schema:
          type: object
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: osee.account.id
        in: header
        schema:
          $ref: '#/components/schemas/UserId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GammaId'
  /branch/{branch}/tuple/tuple4:
    post:
      operationId: addTuple4
      parameters:
      - name: tupleType
        in: query
        schema:
          $ref: '#/components/schemas/Tuple4TypeObjectObjectObjectObject'
      - name: e1
        in: query
        schema:
          type: object
      - name: e2
        in: query
        schema:
          type: object
      - name: e3
        in: query
        schema:
          type: object
      - name: e4
        in: query
        schema:
          type: object
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: osee.account.id
        in: header
        schema:
          $ref: '#/components/schemas/UserId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GammaId'
  /branch/{branch}/tuple/{tupleTable}/{gammaId}:
    delete:
      operationId: deleteTuple
      parameters:
      - name: tupleTable
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: gammaId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GammaId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: osee.account.id
        in: header
        schema:
          $ref: '#/components/schemas/UserId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionId'
  /applicui:
    get:
      operationId: get_1
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /applicui/branches:
    get:
      operationId: getApplicabilityBranches_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchId'
  /applicui/branches/{branchQueryType}:
    get:
      operationId: getApplicabilityBranchesByType_1
      parameters:
      - name: branchQueryType
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchId'
  /applicui/branch/{branch}:
    get:
      operationId: getConfig_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicabilityBranchConfig'
  /applicui/branch/{branch}/all:
    get:
      operationId: getConfigWithCompoundApplics_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicabilityBranchConfig'
  /applicui/ro:
    get:
      operationId: getRO_1
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /health/exec:
    get:
      operationId: exec
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health:
    get:
      operationId: get
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/activemq:
    get:
      operationId: getActiveMq
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/headers:
    get:
      operationId: getAllHeaders
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/balancer:
    get:
      operationId: getBalancerStatus
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/links:
    get:
      operationId: getLinks
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthLinks'
  /health/overview/details:
    get:
      operationId: getServerHealthDetails
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/overview/details/all:
    get:
      operationId: getServerHealthDetailsAll
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/overview:
    get:
      operationId: getServerHealthOverview
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/logs:
    get:
      operationId: getServerLogs
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/types:
    get:
      operationId: getServerTypesHealth
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/top:
    get:
      operationId: getTop
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/usage:
    get:
      operationId: getUsage
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/processes:
    get:
      operationId: serverProcesses
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /health/status:
    get:
      operationId: serverStatus
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatus'
  /applic/update-from-parent:
    put:
      operationId: addMissingApplicabilityFromParentBranch_1
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /applic/blockVisibility:
    post:
      operationId: applyBlockVisibility_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/blockVisibility/{blockApplicId}:
    post:
      operationId: applyBlockVisibilityOnServer_1
      parameters:
      - name: blockApplicId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/view/{id}/applic:
    put:
      operationId: createApplicabilityForView_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    delete:
      operationId: removeApplicabilityFromView_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/cfggroup:
    get:
      operationId: getCfgGroup_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
    put:
      operationId: updateCfgGroup_1
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigurationGroupDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createCfgGroup_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationGroupDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/feature:
    put:
      operationId: updateFeature_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createFeature_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/product-types:
    get:
      operationId: getProductTypes_1
      parameters:
      - name: pageNum
        in: query
        schema:
          type: integer
          format: int64
      - name: count
        in: query
        schema:
          type: integer
          format: int64
      - name: orderByAttributeType
        in: query
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductTypeDefinition'
    put:
      operationId: updateProductType_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createProductType_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductTypeDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/view:
    put:
      operationId: updateView_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    post:
      operationId: createView_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewDefinition'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/deleteBlockApplicability/{blockApplicId}:
    delete:
      operationId: deleteBlockApplicability_1
      parameters:
      - name: blockApplicId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/cfggroup/{id}:
    delete:
      operationId: deleteCfgGroup_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/feature/{id}:
    delete:
      operationId: deleteFeature_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/product-types/{id}:
    get:
      operationId: getProductType_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeDefinition'
    delete:
      operationId: deleteProductType_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/view/{id}:
    get:
      operationId: getViewApplicabilityTokens_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityToken'
    delete:
      operationId: deleteView_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/downloadBlockApplicability/{blockApplicId}:
    get:
      operationId: downloadBlockApplicability_1
      parameters:
      - name: blockApplicId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /applic/change:
    get:
      operationId: getAffectedBranches_2
      parameters:
      - name: injectiontx
        in: query
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: removaltx
        in: query
        schema:
          $ref: '#/components/schemas/TransactionId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApplicabilityId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchId'
  /applic/artifact/reference/{artId}:
    get:
      operationId: getApplicabilitiesReferenced_1
      parameters:
      - name: artId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityId'
  /applic/artifact/reference/token/{artId}:
    get:
      operationId: getApplicabilityReferenceTokens_1
      parameters:
      - name: artId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityToken'
  /applic/artifact/{artId}:
    get:
      operationId: getApplicabilityToken_1
      parameters:
      - name: artId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicabilityToken'
  /applic/applicabilityToken/{id}:
    get:
      operationId: getApplicabilityTokenFromId_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicabilityToken'
  /applic:
    get:
      operationId: getApplicabilityTokens_2
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityToken'
  /applic/artifacts:
    put:
      operationId: getApplicabilityTokens_3
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PairArtifactIdApplicabilityToken'
  /applic/artifacts/applic:
    get:
      operationId: getApplicabilityUsage_1
      parameters:
      - name: applic
        in: query
        schema:
          type: string
      - name: artTypes
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactTypeToken'
      - name: attrTypes
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicabilityUseResultToken'
  /applic/matrix:
    get:
      operationId: getConfigMatrix_1
      parameters:
      - name: matrixtype
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /applic/cfggroup/def/{id}:
    get:
      operationId: getConfigurationGroup_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationGroupDefinition'
  /applic/feature/{featureNameOrId}:
    get:
      operationId: getFeature_1
      parameters:
      - name: featureNameOrId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureDefinition'
  /applic/features:
    get:
      operationId: getFeatureDefinitionData_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureDefinition'
  /applic/featureMatrix:
    get:
      operationId: getFeatureMatrixExcel_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: filter
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
  /applic/versionConfig/{version}:
    get:
      operationId: getVersionConfig_1
      parameters:
      - name: version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactId'
  /applic/view/def/{id}:
    get:
      operationId: getView_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateViewDefinition'
  /applic/table:
    get:
      operationId: getViewTable_1
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /applic/views:
    get:
      operationId: getViews_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /applic/access:
    get:
      operationId: isAccess_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/blockVisibility/refresh:
    post:
      operationId: refreshStagedFiles_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/cfggroup/{groupId}/relate/{viewId}:
    put:
      operationId: relateCfgGroupToView_1
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: viewId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/{applicId}:
    put:
      operationId: setApplicability_1
      parameters:
      - name: applicId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicabilityId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /applic/set/{applicTag}:
    put:
      operationId: setApplicabilityByString_1
      parameters:
      - name: applicTag
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /applic/artifact/reference:
    put:
      operationId: setApplicabilityReference_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApplicabilityData'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /applic/blockVisibility/startWatcher:
    put:
      operationId: startBlockVisibilityWatcher_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockApplicabilityStageRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/blockVisibility/stopWatcher:
    put:
      operationId: stopBlockVisibilityWatcher_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/cfggroup/sync:
    post:
      operationId: syncCfgGroup_2
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/cfggroup/sync/{id}:
    post:
      operationId: syncCfgGroup_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/cfggroup/{groupId}/unrelate/{viewId}:
    put:
      operationId: unrelateCfgGroupToView_1
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: viewId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /applic/uploadBlockApplicability:
    post:
      operationId: uploadBlockApplicability_1
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/octet-stream:
              schema:
                type: string
  /applic/uploadRunBlockApplicability:
    post:
      operationId: uploadRunBlockApplicability_1
      parameters:
      - name: view
        in: query
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /applic/validate:
    put:
      operationId: validate_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /artifact/old-type/{oldType}/new-type/{newType}:
    post:
      operationId: changeArtifactType_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: oldType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: newType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/type/{artifactType}/parent/{parent}/create:
    post:
      operationId: createArtifact_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: parent
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactToken'
  /artifact/type/{artifactType}/parent/{parent}:
    post:
      operationId: createArtifacts_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: parent
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/{artifact}:
    delete:
      operationId: deleteArtifact_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /artifact/exp:
    get:
      operationId: expGetArtifactTokens_1
      parameters:
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: parent
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/search:
    post:
      operationId: findArtifactIds_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSearchOptions'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactId'
  /artifact/search/token:
    post:
      operationId: findArtifactTokens_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSearchOptions'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/{artifactId}:
    get:
      operationId: getArtifactAsHtml_1
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /artifact/attType/{attributeType}/id:
    get:
      operationId: getArtifactIdsByAttribute_1
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactId'
  /artifact/type/{artifactType}/id:
    get:
      operationId: getArtifactIdsByType_1
      parameters:
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactId'
  /artifact/map:
    get:
      operationId: getArtifactMaps_1
      parameters:
      - name: attributeType
        in: query
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: representation
        in: query
        schema:
          type: string
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /artifact/table:
    get:
      operationId: getArtifactTable_1
      parameters:
      - name: attributeType
        in: query
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: attributeColumns
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactTable'
  /artifact/{artifactId}/token:
    get:
      operationId: getArtifactToken_1
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactToken'
  /artifact/applicability/{id}:
    get:
      operationId: getArtifactTokensByApplicability_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicabilityId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/attType/{attributeType}/token:
    get:
      operationId: getArtifactTokensByAttribute_1
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: value
        in: query
        schema:
          type: string
      - name: exists
        in: query
        schema:
          type: boolean
          default: true
      - name: artifactType
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/type/{artifactType}/token:
    get:
      operationId: getArtifactTokensByType_1
      parameters:
      - name: artifactType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactTypeToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/{artifactId}/attribute/{attributeId}:
    get:
      operationId: getAttribute_1
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /artifact/{artifactId}/attribute/type/{attributeType}:
    get:
      operationId: getAttributeTypeValues_1
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /artifact/{artifactId}/attribute/type/{attributeType}/version/{transactionId}:
    get:
      operationId: getAttributeTypeValuesForTransaction_1
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /artifact/{artifactId}/attribute/type:
    get:
      operationId: getAttributeTypes_1
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /artifact/{artifactId}/attribute/{attributeId}/version/{transactionId}:
    get:
      operationId: getAttributeWithGamma_1
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /artifact/{artifactId}/attribute/{attributeId}/version/{transactionId}/text:
    get:
      operationId: getAttributeWithGammaAsText_1
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /artifact/{artifactId}/attribute/all:
    get:
      operationId: getAttributes_1
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDataTransfer'
  /artifact/{artifactId}/attribute:
    get:
      operationId: getAttributesAsHtml_1
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /artifact/changed_artifacts/{attributeTypeJoin}/{commentPattern}:
    get:
      operationId: getChangedArtifactTokens_1
      parameters:
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: attributeTypeJoin
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeJoin'
      - name: commentPattern
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /artifact/{artifact}/related/maps:
    get:
      summary: Gets a hierarchy tree of Artifacts
      operationId: getRelatedArtifactsTree_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        "200":
          description: Successful
        "400":
          description: Content not found
  /artifact:
    get:
      operationId: getRootChildrenAsHtml_1
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /artifact/search/v1:
    post:
      operationId: getSearchWithMatrixParams_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
  /artifact/{artifact}/attribute/type/{attributeType}:
    put:
      operationId: setSoleAttributeValue_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /{artifactId}/attribute/{attributeId}:
    get:
      operationId: getAttribute_2
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /{artifactId}/attribute/type/{attributeType}:
    get:
      operationId: getAttributeTypeValues_2
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /{artifactId}/attribute/type/{attributeType}/version/{transactionId}:
    get:
      operationId: getAttributeTypeValuesForTransaction_2
      parameters:
      - name: attributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeTypeToken'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /{artifactId}/attribute/type:
    get:
      operationId: getAttributeTypes_2
      responses:
        default:
          description: default response
          content:
            text/html: {}
  /{artifactId}/attribute/{attributeId}/version/{transactionId}:
    get:
      operationId: getAttributeWithGamma_2
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /{artifactId}/attribute/{attributeId}/version/{transactionId}/text:
    get:
      operationId: getAttributeWithGammaAsText_2
      parameters:
      - name: attributeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttributeId'
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /{artifactId}/attribute/all:
    get:
      operationId: getAttributes_2
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDataTransfer'
  /{artifactId}/attribute:
    get:
      operationId: getAttributesAsHtml_2
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /branches/{branch}/archive:
    post:
      operationId: archiveBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      operationId: unarchiveBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /branches/{branch}/associated-artifact/{art-id}:
    put:
      operationId: associateBranchToArtifact
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: art-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/commit/{destination-branch}:
    post:
      operationId: commitBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: destination-branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchCommitOptions'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResult'
    delete:
      operationId: unCommitBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: destination-branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /branches/{branch1}/diff/{branch2}:
    get:
      operationId: compareBranches
      parameters:
      - name: branch1
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: branch2
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeItem'
  /branches:
    get:
      operationId: getBranches_1
      parameters:
      - name: branchUuids
        in: query
        schema:
          type: string
          default: ""
      - name: branchTypes
        in: query
        schema:
          type: string
          default: ""
      - name: branchStates
        in: query
        schema:
          type: string
          default: ""
      - name: deleted
        in: query
        schema:
          type: boolean
          default: false
      - name: archived
        in: query
        schema:
          type: boolean
          default: false
      - name: nameEquals
        in: query
        schema:
          type: string
          default: ""
      - name: namePattern
        in: query
        schema:
          type: string
          default: ""
      - name: childOf
        in: query
        schema:
          type: integer
          format: int64
      - name: ancestorOf
        in: query
        schema:
          type: integer
          format: int64
      - name: category
        in: query
        schema:
          $ref: '#/components/schemas/BranchCategoryToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
    post:
      operationId: createBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBranch'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchId'
  /branches/validation:
    post:
      operationId: createBranchValidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBranch'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branches/{branch}:
    get:
      operationId: getBranchById
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
    post:
      operationId: createBranchWithId
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBranch'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchId'
    delete:
      operationId: purgeBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: recurse
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/program:
    post:
      operationId: createProgramBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchToken'
  /branches/{branch}/category/{category}:
    post:
      operationId: setBranchCategory
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: category
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchCategoryToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
    delete:
      operationId: deleteBranchCategory
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: category
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchCategoryToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /branches/{branch}/txs:
    get:
      operationId: getAllBranchTxs
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      operationId: writeTx
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTransaction'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /branches/{branch}/artifact/type/{artifactTypes}/attributes:
    get:
      operationId: getArtifactDetailsByType
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: artifactTypes
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonArtifact'
  /branches/{branch}/view/{viewId}/artifact/type/{artifactTypes}/attributes:
    get:
      operationId: getArtifactDetailsByType_1
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: viewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: artifactTypes
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonArtifact'
  /branches/baseline:
    get:
      operationId: getBaselineBranches
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /branches/{branch}/category:
    get:
      operationId: getBranchCategories
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchCategoryToken'
  /branches/{branch1}/changes/{branch2}:
    get:
      operationId: getBranchChangeReport
      parameters:
      - name: branch1
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: branch2
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeReportRowDto'
  /branches/{branch}/txs/latest:
    get:
      operationId: getBranchLatestTx
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /branches/{branch}/txs/{tx-id}:
    get:
      operationId: getBranchTx
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: tx-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /branches/{branch}/changes/{tx1}/{tx2}:
    get:
      operationId: getBranchTxChangeReport
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: tx1
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: tx2
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeReportRowDto'
  /branches/query:
    post:
      operationId: getBranches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchQueryData'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /branches/category/{category}:
    get:
      operationId: getBranchesByCategory
      parameters:
      - name: category
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchCategoryToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /branches/{type}/category/{category}:
    get:
      operationId: getBranchesByCategoryAndType
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: category
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchCategoryToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /branches/{branchId}/other-mods/{art-id}:
    get:
      operationId: getOtherBranchesWithModifiedArtifacts
      parameters:
      - name: branchId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: art-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchId'
  /branches/{branch}/relation/type/{relationTypes}:
    get:
      operationId: getRelationsByType
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: relationTypes
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonRelations'
  /branches/working:
    get:
      operationId: getWorkingBranches
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /branches/log:
    put:
      operationId: logBranchActivity
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/txs/{tx-ids}:
    delete:
      operationId: purgeTxs
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: tx-ids
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/name:
    put:
      operationId: setBranchName
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/permission/{permission}/{subject}:
    post:
      operationId: setBranchPermission
      parameters:
      - name: subject
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: permission
        in: path
        required: true
        schema:
          type: string
          enum:
          - NONE
          - READ
          - WRITE
          - USER_LOCK
          - FULLACCESS
          - DENY
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/state/{branch-state}:
    put:
      operationId: setBranchState
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: branch-state
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchState'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/type/{branch-type}:
    put:
      operationId: setBranchType
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: branch-type
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchType'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/txs/{tx-id}/comment:
    put:
      operationId: setTxComment
      parameters:
      - name: branchd
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: tx-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branch}/associated-artifact:
    delete:
      operationId: unassociateBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /branches/{branchId}/undo/{txId}:
    delete:
      operationId: undo
      parameters:
      - name: branchId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: txId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: boolean
  /branches/{branchId}/undo:
    delete:
      operationId: undoLatest
      parameters:
      - name: branchId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: boolean
  /branches/{branch}/update:
    post:
      operationId: updateBranch
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBranchData'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBranchData'
  /datastore/user/cache:
    delete:
      operationId: clearUserCache
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /datastore/user:
    get:
      operationId: getUserInfo
      parameters:
      - name: osee.user.id
        in: header
        schema:
          type: string
          default: "-1"
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
    post:
      operationId: createUsers
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionId'
  /datastore/info:
    get:
      operationId: getInfo
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoreInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatastoreInfo'
  /datastore/initialize:
    post:
      operationId: initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToken'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionId'
  /datastore/synonyms:
    post:
      operationId: synonyms
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /exceptionregistry/cache:
    delete:
      operationId: clearCache
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /exceptionregistry/list:
    get:
      operationId: list
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExceptionRegistryEntry'
  /exceptionregistry/exclude:
    post:
      operationId: setException
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExceptionRegistryEntry'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /exceptionregistry/include:
    post:
      operationId: setInclusion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExceptionRegistryEntry'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /gc/user/history:
    get:
      operationId: asExecutedCommandHistoryTable_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutedCommandHistory'
  /gc/context:
    post:
      operationId: createDefaultContext_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionToken'
  /gc/user/commands:
    get:
      operationId: getUserCommands_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserContext'
  /index/queue:
    delete:
      operationId: deleteIndexQueue
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /index/queue/{query-id}:
    delete:
      operationId: deleteIndexQueueItem
      parameters:
      - name: query-id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /index/branches/{branch-uuids}:
    put:
      operationId: indexBranches
      parameters:
      - name: branch-uuids
        in: path
        required: true
        schema:
          type: string
      - name: missingItemsOnly
        in: query
        schema:
          type: boolean
          default: true
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /index/resources:
    put:
      operationId: indexResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexResources'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /relation/createRelationByType/sideA/{sideA}/sideB/{sideB}/relationTypeToken/{relationType}:
    post:
      operationId: createRelationByType_1
      parameters:
      - name: sideA
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: sideB
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: relationType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RelationTypeToken'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /relation/getRelatedHierarchy/{artifact}:
    get:
      operationId: getRelatedHierarchy_1
      parameters:
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /relation/getRelatedRecursive/{artifact}/relationTypeToken/{relationType}:
    get:
      operationId: getRelatedRecursive_1
      parameters:
      - name: artifact
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: relationType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RelationTypeToken'
      - name: view
        in: query
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtifactToken'
  /report/{branch}/view/{view}/template/{template}:
    get:
      operationId: getReportFromTemplate
      parameters:
      - name: branch
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: view
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: template
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        default:
          description: default response
          content:
            application/xml: {}
  /resources:
    get:
      operationId: getResource
      parameters:
      - name: path
        in: query
        schema:
          type: string
      - name: unzip
        in: query
        schema:
          type: boolean
          default: false
      - name: zip
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      operationId: deleteResource
      parameters:
      - name: path
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /resources/publish:
    get:
      operationId: getPublishResource
      parameters:
      - name: path
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /resources/{protocol}/{resourceId}:
    post:
      operationId: saveResource
      parameters:
      - name: protocol
        in: path
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      - name: overwrite
        in: query
        schema:
          type: boolean
          default: false
      - name: compress
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /txs/{tx-id1}/diff/{tx-id2}:
    get:
      operationId: compareTxs
      parameters:
      - name: tx-id1
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: tx-id2
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeItem'
  /txs:
    get:
      operationId: getAllTxs
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionBuilder'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResult'
    delete:
      operationId: purgeUnusedBackingDataAndTransactions
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /txs/{art-id}/{branch-id}:
    get:
      operationId: getArtifactHistory
      parameters:
      - name: art-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      - name: branch-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeItem'
  /txs/{tx-id}:
    get:
      operationId: getTx
      parameters:
      - name: tx-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /txs/{tx-ids}:
    delete:
      operationId: purgeTxs_1
      parameters:
      - name: tx-ids
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /txs/{user}/branch/{branch-id}/transaction/{tx-id}/artifact/{art-id}/comment:
    put:
      operationId: replaceWithBaselineTxVersion
      parameters:
      - name: user
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: branch-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchId'
      - name: tx-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: art-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /txs/{tx-id}/comment:
    put:
      operationId: setTxComment_1
      parameters:
      - name: tx-id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransactionId'
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /types/health:
    get:
      operationId: getHealthReport
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XResultData'
  /types/serverEnumTypesAndValues:
    get:
      operationId: getServerEnumTypesAndValues
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
components:
  schemas:
    ArtifactId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    BranchId:
      type: object
      properties:
        viewId:
          $ref: '#/components/schemas/ArtifactId'
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    XResultData:
      type: object
      properties:
        title:
          type: string
        results:
          type: array
          items:
            type: string
        ids:
          type: array
          items:
            type: string
        errorCount:
          type: integer
          format: int32
        warningCount:
          type: integer
          format: int32
        infoCount:
          type: integer
          format: int32
        tables:
          type: array
          items:
            $ref: '#/components/schemas/XResultTable'
        txId:
          type: string
        empty:
          type: boolean
        success:
          type: boolean
        ok:
          type: boolean
        failed:
          type: boolean
        warnings:
          type: boolean
        numErrors:
          type: integer
          format: int32
        numWarnings:
          type: integer
          format: int32
        errors:
          type: boolean
        numErrorsViaSearch:
          type: integer
          format: int32
        numWarningsViaSearch:
          type: integer
          format: int32
    XResultTable:
      type: object
      properties:
        name:
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/XResultTableColumn'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/XResultTableRow'
    XResultTableColumn:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        width:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - Date
          - Float
          - Percent
          - String
          - String_MultiLine
          - Boolean
          - Integer
          - Long
          - Paragraph_Number
          - Check
    XResultTableRow:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    BlockApplicabilityStageRequest:
      type: object
      properties:
        views:
          type: object
          additionalProperties:
            type: string
        commentNonApplicableBlocks:
          type: boolean
        sourcePath:
          type: string
        stagePath:
          type: string
        customStageDir:
          type: string
        files:
          type: array
          items:
            type: string
    ConfigurationGroupDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        configurations:
          type: array
          items:
            type: string
    FeatureDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        values:
          type: array
          items:
            type: string
        defaultValue:
          type: string
        description:
          type: string
        multiValued:
          type: boolean
        valueType:
          type: string
        type:
          type: string
        productApplicabilities:
          type: array
          items:
            type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ProductTypeDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    CreateViewDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        data:
          type: object
        copyFrom:
          $ref: '#/components/schemas/ArtifactId'
        productApplicabilities:
          type: array
          items:
            type: string
        configurationGroup:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactId'
        description:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ApplicabilityId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    TransactionId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ApplicabilityToken:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    PairArtifactIdApplicabilityToken:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/ArtifactId'
        second:
          $ref: '#/components/schemas/ApplicabilityToken'
    ApplicabilityUseResultToken:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/ApplicabilityToken'
        arts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ArtifactToken'
    ArtifactToken:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/ArtifactToken'
        guid:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        branch:
          $ref: '#/components/schemas/BranchToken'
        branchIdString:
          type: string
        name:
          type: string
        artifactType:
          $ref: '#/components/schemas/ArtifactTypeToken'
    ArtifactTypeToken:
      type: object
      properties:
        abstract:
          type: boolean
        image:
          $ref: '#/components/schemas/OseeImage'
        validComputedCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/ComputedCharacteristicTokenObject'
        validAttributeTypes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
        directDescendantTypes:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactTypeToken'
        allDescendantTypes:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactTypeToken'
        superTypes:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactTypeToken'
        name:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    AttributeTypeGenericObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        mediaType:
          type: string
        taggerType:
          $ref: '#/components/schemas/TaggerTypeToken'
        namespace:
          $ref: '#/components/schemas/NamespaceToken'
        fileExtension:
          type: string
        displayHints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DisplayHint'
        taggable:
          type: boolean
        baseAttributeTypeDefaultValue:
          type: object
        javaObject:
          type: boolean
        date:
          type: boolean
        branchId:
          type: boolean
        artifactId:
          type: boolean
        uri:
          type: boolean
        singleLine:
          type: boolean
        enumerated:
          type: boolean
        string:
          type: boolean
        inputStream:
          type: boolean
        integer:
          type: boolean
        multiLine:
          type: boolean
        long:
          type: boolean
        boolean:
          type: boolean
        double:
          type: boolean
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        unqualifiedName:
          type: string
    AttributeTypeToken:
      type: object
      properties:
        taggable:
          type: boolean
        javaObject:
          type: boolean
        date:
          type: boolean
        branchId:
          type: boolean
        artifactId:
          type: boolean
        uri:
          type: boolean
        singleLine:
          type: boolean
        enumerated:
          type: boolean
        displayHints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DisplayHint'
        mediaType:
          type: string
        taggerType:
          $ref: '#/components/schemas/TaggerTypeToken'
        string:
          type: boolean
        inputStream:
          type: boolean
        namespace:
          $ref: '#/components/schemas/NamespaceToken'
        integer:
          type: boolean
        multiLine:
          type: boolean
        long:
          type: boolean
        boolean:
          type: boolean
        double:
          type: boolean
        fileExtension:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        unqualifiedName:
          type: string
        name:
          type: string
        description:
          type: string
    BranchToken:
      type: object
      properties:
        shortName:
          type: string
        viewId:
          $ref: '#/components/schemas/ArtifactId'
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        name:
          type: string
    ComputedCharacteristicTokenObject:
      type: object
      properties:
        taggable:
          type: boolean
        displayHints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DisplayHint'
        mediaType:
          type: string
        taggerType:
          $ref: '#/components/schemas/TaggerTypeToken'
        namespace:
          $ref: '#/components/schemas/NamespaceToken'
        attributeTypesToCompute:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeGenericObject'
        unqualifiedName:
          type: string
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    DisplayHint:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    NamespaceToken:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        description:
          type: string
    OseeImage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        typeId:
          type: integer
          format: int64
        pluginId:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    TaggerTypeToken:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    TransactionToken:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        branch:
          $ref: '#/components/schemas/BranchId'
        branchIdString:
          type: string
    ApplicabilityData:
      type: object
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactId'
        applIds:
          type: array
          items:
            $ref: '#/components/schemas/ApplicabilityToken'
    ArtifactSearchOptions:
      type: object
      properties:
        artIds:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactId'
        artTypeIds:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactTypeToken'
        attrTypeIds:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeId'
        searchString:
          type: string
        applic:
          $ref: '#/components/schemas/ApplicabilityId'
        view:
          $ref: '#/components/schemas/ArtifactId'
        caseSensitive:
          type: boolean
        matchWordOrder:
          type: boolean
        exactMatch:
          type: boolean
        includeDeleted:
          type: string
          enum:
          - INCLUDE_DELETED
          - INCLUDE_HARD_DELETED
          - EXCLUDE_DELETED
    AttributeTypeId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ArtifactTable:
      type: object
      properties:
        tableOptions:
          $ref: '#/components/schemas/ArtifactTableOptions'
        data:
          type: array
          items:
            type: array
            items:
              type: string
    ArtifactTableOptions:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ReportColumn'
    ReportColumn:
      type: object
      properties:
        name:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ReportFilter'
    ReportFilter:
      type: object
    AttributeId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    AttributeDataTransfer:
      type: object
      properties:
        attrId:
          $ref: '#/components/schemas/AttributeId'
        attrTypeId:
          $ref: '#/components/schemas/AttributeTypeId'
        attributeName:
          type: string
        baseType:
          type: string
        displayHint:
          type: string
        description:
          type: string
        extension:
          type: string
        gammaId:
          $ref: '#/components/schemas/GammaId'
        mediaType:
          type: string
        multiplicity:
          type: string
        validEnums:
          type: array
          items:
            type: string
        value:
          type: string
    GammaId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    AttributeTypeJoin:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        types:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
        tupleType:
          $ref: '#/components/schemas/Tuple2TypeAttributeTypeJoinAttributeTypeToken'
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    Tuple2TypeAttributeTypeJoinAttributeTypeToken:
      type: object
      properties:
        valueOfE1:
          type: object
        valueOfE2:
          type: object
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ArtifactReadable:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ArtifactReadable'
        attributes:
          $ref: '#/components/schemas/ResultSetAttributeReadableObject'
        child:
          $ref: '#/components/schemas/ArtifactReadable'
        tags:
          type: array
          items:
            type: string
        validAttributeTypes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
        childrentIds:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactId'
        historical:
          type: boolean
        safeName:
          type: string
        applicability:
          $ref: '#/components/schemas/ApplicabilityId'
        existingRelationTypes:
          type: array
          items:
            $ref: '#/components/schemas/RelationTypeToken'
        validRelationTypes:
          type: array
          items:
            $ref: '#/components/schemas/RelationTypeToken'
        lastModifiedTransaction:
          $ref: '#/components/schemas/TransactionId'
        attributeIterable:
          type: object
        existingAttributeTypes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeTypeToken'
        applicabilityToken:
          $ref: '#/components/schemas/ApplicabilityToken'
        token:
          $ref: '#/components/schemas/ArtifactToken'
        guid:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        branch:
          $ref: '#/components/schemas/BranchToken'
        branchIdString:
          type: string
        name:
          type: string
        artifactType:
          $ref: '#/components/schemas/ArtifactTypeToken'
        transaction:
          $ref: '#/components/schemas/TransactionId'
        deleted:
          type: boolean
        modificationType:
          $ref: '#/components/schemas/ModificationType'
    AttributeReadableObject:
      type: object
      properties:
        gammaId:
          $ref: '#/components/schemas/GammaId'
        deleted:
          type: boolean
        modificationType:
          $ref: '#/components/schemas/ModificationType'
        value:
          type: object
        attributeType:
          $ref: '#/components/schemas/AttributeTypeToken'
        displayableString:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ModificationType:
      type: object
      properties:
        existingVersionUsed:
          type: boolean
        deleted:
          type: boolean
        unDeleted:
          type: boolean
        edited:
          type: boolean
        artifactDeleted:
          type: boolean
        hardDeleted:
          type: boolean
        name:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    RelationTypeToken:
      type: object
      properties:
        relationArtifactType:
          $ref: '#/components/schemas/ArtifactTypeToken'
        ordered:
          type: boolean
        order:
          type: string
          enum:
          - USER_DEFINED
          - LEXICOGRAPHICAL_ASC
          - LEXICOGRAPHICAL_DESC
          - UNORDERED
          - PREEXISTING
          - CHRONOLOGICAL
        newRelationTable:
          type: boolean
        multiplicity:
          type: string
          enum:
          - ONE_TO_ONE
          - ONE_TO_MANY
          - MANY_TO_ONE
          - MANY_TO_MANY
        name:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ResultSetAttributeReadableObject:
      type: object
      properties:
        empty:
          type: boolean
        list:
          type: array
          items:
            $ref: '#/components/schemas/AttributeReadableObject'
        atMostOneOrNull:
          $ref: '#/components/schemas/AttributeReadableObject'
        oneOrNull:
          $ref: '#/components/schemas/AttributeReadableObject'
        exactlyOne:
          $ref: '#/components/schemas/AttributeReadableObject'
    MatchLocation:
      type: object
      properties:
        startPosition:
          type: integer
          format: int32
        endPosition:
          type: integer
          format: int32
    Predicate:
      type: object
      properties:
        type:
          type: string
          enum:
          - IDS
          - GUIDS
          - IS_OF_TYPE
          - TYPE_EQUALS
          - EXISTS_TYPE
          - NOT_EXISTS_TYPE
          - ATTRIBUTE_TYPE
          - RELATED_TO
        typeParameters:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: string
        options:
          type: array
          items:
            type: string
            enum:
            - CASE__MATCH
            - CASE__IGNORE
            - TOKEN_COUNT__MATCH
            - TOKEN_COUNT__IGNORE
            - TOKEN_DELIMITER__EXACT
            - TOKEN_DELIMITER__WHITESPACE
            - TOKEN_DELIMITER__ANY
            - TOKEN_MATCH_ORDER__ANY
            - TOKEN_MATCH_ORDER__MATCH
    SearchMatch:
      type: object
      properties:
        artId:
          $ref: '#/components/schemas/ArtifactId'
        attrId:
          $ref: '#/components/schemas/AttributeId'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/MatchLocation'
    SearchParameters:
      type: object
      properties:
        requestType:
          type: string
          enum:
          - COUNT
          - IDS
          - MATCHES
        branch:
          $ref: '#/components/schemas/BranchId'
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        includeDeleted:
          type: boolean
        fromTx:
          $ref: '#/components/schemas/TransactionId'
    SearchRequest:
      type: object
      properties:
        branch:
          $ref: '#/components/schemas/BranchId'
        fromTx:
          $ref: '#/components/schemas/TransactionId'
        includeDeleted:
          type: boolean
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        requestType:
          type: string
          enum:
          - COUNT
          - IDS
          - MATCHES
    SearchResponse:
      type: object
      properties:
        total:
          type: integer
          format: int32
        searchTime:
          type: integer
          format: int64
        version:
          type: string
        searchRequest:
          $ref: '#/components/schemas/SearchRequest'
        ids:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactId'
        searchMatches:
          type: array
          items:
            $ref: '#/components/schemas/SearchMatch'
        searchParameters:
          $ref: '#/components/schemas/SearchParameters'
        matches:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/SearchMatch'
    AttributeReportColumn:
      type: object
      properties:
        name:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ReportFilter'
        type:
          $ref: '#/components/schemas/AttributeTypeToken'
    ExecutedCommandHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        executedCommandHistory:
          type: string
        commandHistoryId:
          type: string
        data:
          type: array
          items:
            type: array
            items:
              type: string
        columnHeaders:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/AttributeReportColumn'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ReportColumn'
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    CommandParameter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        typeAsString:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    CommandsRelatedToContext:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contextGroup:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        parameter:
          $ref: '#/components/schemas/CommandParameter'
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    UserContext:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        commands:
          type: array
          items:
            $ref: '#/components/schemas/CommandsRelatedToContext'
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    UserId:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    Tuple2TypeObjectObject:
      type: object
      properties:
        valueOfE1:
          type: object
        valueOfE2:
          type: object
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    Tuple3TypeObjectObjectObject:
      type: object
      properties:
        valueOfE3:
          type: object
        valueOfE1:
          type: object
        valueOfE2:
          type: object
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    Tuple4TypeObjectObjectObjectObject:
      type: object
      properties:
        valueOfE4:
          type: object
        valueOfE3:
          type: object
        valueOfE1:
          type: object
        valueOfE2:
          type: object
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ApplicabilityBranchConfig:
      type: object
      properties:
        branch:
          $ref: '#/components/schemas/BranchViewToken'
        parentBranch:
          $ref: '#/components/schemas/BranchViewToken'
        editable:
          type: boolean
        views:
          type: array
          items:
            $ref: '#/components/schemas/BranchViewDefinition'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationGroupDefinition'
        features:
          type: array
          items:
            $ref: '#/components/schemas/ExtendedFeatureDefinition'
        associatedArtifactId:
          $ref: '#/components/schemas/ArtifactId'
    BranchViewDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        productApplicabilities:
          type: array
          items:
            type: string
        hasFeatureApplicabilities:
          type: boolean
    BranchViewToken:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        viewId:
          $ref: '#/components/schemas/ArtifactId'
        idIntValue:
          type: integer
          format: int32
    ExtendedFeatureDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        values:
          type: array
          items:
            type: string
        defaultValue:
          type: string
        description:
          type: string
        multiValued:
          type: boolean
        valueType:
          type: string
        type:
          type: string
        productApplicabilities:
          type: array
          items:
            type: string
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/NameValuePair'
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    NameValuePair:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        values:
          type: array
          items:
            type: string
    HealthLink:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
    HealthLinks:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/HealthLink'
    ServerStatus:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
        threadStats:
          type: array
          items:
            type: string
        garbageCollectorStats:
          type: array
          items:
            type: string
    TransactionResult:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/TransactionToken'
        results:
          $ref: '#/components/schemas/XResultData'
        success:
          type: boolean
        failed:
          type: boolean
    BranchCommitOptions:
      type: object
      properties:
        committer:
          $ref: '#/components/schemas/ArtifactId'
        archive:
          type: boolean
    ChangeItem:
      type: object
      properties:
        ignoreType:
          type: string
          enum:
          - SENTINEL
          - CREATED_AND_DELETED
          - ALREADY_ON_DESTINATION
          - DELETED_AND_DNE_ON_DESTINATION
          - DELETED_ON_DESTINATION
          - REPLACED_WITH_VERSION
          - RESURRECTED
          - DELETED_ON_DEST_AND_NOT_RESURRECTED
          - REPLACED_WITH_VERSION_AND_NOT_RESURRECTED
          - NONE
        changeType:
          $ref: '#/components/schemas/ChangeType'
        artId:
          $ref: '#/components/schemas/ArtifactId'
        itemId:
          $ref: '#/components/schemas/Id'
        itemTypeId:
          $ref: '#/components/schemas/Id'
        baselineVersion:
          $ref: '#/components/schemas/ChangeVersion'
        firstNonCurrentChange:
          $ref: '#/components/schemas/ChangeVersion'
        currentVersion:
          $ref: '#/components/schemas/ChangeVersion'
        destinationVersion:
          $ref: '#/components/schemas/ChangeVersion'
        netChange:
          $ref: '#/components/schemas/ChangeVersion'
        synthetic:
          type: boolean
        artIdB:
          $ref: '#/components/schemas/ArtifactId'
        applicabilityCopy:
          type: boolean
        deleted:
          type: boolean
    ChangeType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        notAttributeChange:
          type: boolean
        notRelationChange:
          type: boolean
        typeId:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ChangeVersion:
      type: object
      properties:
        transactionToken:
          $ref: '#/components/schemas/TransactionToken'
        gammaId:
          $ref: '#/components/schemas/GammaId'
        modType:
          $ref: '#/components/schemas/ModificationType'
        value:
          type: string
        uri:
          type: string
        valid:
          type: boolean
        applicabilityToken:
          $ref: '#/components/schemas/ApplicabilityToken'
    Id:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    BranchType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        portBranch:
          type: boolean
        mergeBranch:
          type: boolean
        baselineBranch:
          type: boolean
        systemRootBranch:
          type: boolean
        workingBranch:
          type: boolean
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    NewBranch:
      type: object
      properties:
        branchName:
          type: string
        parentBranch:
          $ref: '#/components/schemas/BranchId'
        associatedArtifact:
          $ref: '#/components/schemas/ArtifactId'
        branchType:
          $ref: '#/components/schemas/BranchType'
        sourceTransaction:
          $ref: '#/components/schemas/TransactionToken'
        creationComment:
          type: string
        mergeAddressingQueryId:
          type: integer
          format: int64
        mergeDestinationBranchId:
          $ref: '#/components/schemas/BranchId'
        txCopyBranchType:
          type: boolean
        sourceTransactionId:
          $ref: '#/components/schemas/TransactionToken'
        parentBranchId:
          $ref: '#/components/schemas/BranchId'
    BranchCategoryToken:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    Transaction:
      type: object
      properties:
        txId:
          $ref: '#/components/schemas/TransactionId'
        branchUuid:
          type: integer
          format: int64
        txType:
          $ref: '#/components/schemas/TransactionDetailsType'
        comment:
          type: string
        author:
          $ref: '#/components/schemas/ArtifactId'
        timeStamp:
          type: string
          format: date-time
        commitArt:
          $ref: '#/components/schemas/ArtifactId'
    TransactionDetailsType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        baseline:
          type: boolean
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    JsonArtifact:
      type: object
      properties:
        name:
          type: string
        id:
          $ref: '#/components/schemas/ArtifactId'
        typeName:
          type: string
        attrs:
          type: array
          items:
            $ref: '#/components/schemas/JsonAttribute'
        type:
          $ref: '#/components/schemas/ArtifactTypeToken'
    JsonAttribute:
      type: object
      properties:
        typeName:
          type: string
        typeId:
          $ref: '#/components/schemas/AttributeTypeId'
        value:
          type: string
    Branch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        viewId:
          $ref: '#/components/schemas/ArtifactId'
        associatedArtifact:
          $ref: '#/components/schemas/ArtifactId'
        baselineTx:
          $ref: '#/components/schemas/TransactionId'
        parentTx:
          $ref: '#/components/schemas/TransactionId'
        parentBranch:
          $ref: '#/components/schemas/BranchId'
        branchState:
          $ref: '#/components/schemas/BranchState'
        branchType:
          $ref: '#/components/schemas/BranchType'
        inheritAccessControl:
          type: boolean
        archived:
          type: boolean
        shortName:
          type: string
        idIntValue:
          type: integer
          format: int32
    BranchState:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creationInProgress:
          type: boolean
        rebaselineInProgress:
          type: boolean
        deleted:
          type: boolean
        modified:
          type: boolean
        rebaselined:
          type: boolean
        purged:
          type: boolean
        deleteInProgress:
          type: boolean
        purgeInProgress:
          type: boolean
        committed:
          type: boolean
        commitInProgress:
          type: boolean
        created:
          type: boolean
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
    ChangeReportRowDto:
      type: object
      properties:
        ids:
          type: string
        names:
          type: string
        itemType:
          type: string
        itemKind:
          type: string
        changeType:
          type: string
        isValue:
          type: string
        wasValue:
          type: string
    BranchQueryData:
      type: object
      properties:
        branchIds:
          type: array
          items:
            $ref: '#/components/schemas/BranchId'
        branchTypes:
          type: array
          items:
            $ref: '#/components/schemas/BranchType'
        branchStates:
          type: array
          items:
            $ref: '#/components/schemas/BranchState'
        includeDeleted:
          type: boolean
        includeArchived:
          type: boolean
        asIds:
          type: boolean
        nameEquals:
          type: string
        namePattern:
          type: string
        namePatternIgnoreCase:
          type: string
        isChildOf:
          type: integer
          format: int64
        isAncestorOf:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/BranchCategoryToken'
        html:
          type: string
    JsonRelation:
      type: object
      properties:
        artA:
          type: string
        artAName:
          type: string
        artB:
          type: string
        artBName:
          type: string
        typeName:
          type: string
        typeId:
          type: string
    JsonRelations:
      type: object
      properties:
        relations:
          type: array
          items:
            $ref: '#/components/schemas/JsonRelation'
    UpdateBranchData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/XResultData'
        fromBranch:
          $ref: '#/components/schemas/BranchId'
        toBranch:
          $ref: '#/components/schemas/BranchId'
        newBranchId:
          $ref: '#/components/schemas/BranchId'
        fromName:
          type: string
        toName:
          type: string
        needsMerge:
          type: boolean
    NewTransaction:
      type: object
      properties:
        comment:
          type: string
        authorId:
          type: string
    DatastoreInfo:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
    IUserGroupArtifactToken:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/ArtifactToken'
        guid:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        branch:
          $ref: '#/components/schemas/BranchToken'
        branchIdString:
          type: string
        name:
          type: string
        artifactType:
          $ref: '#/components/schemas/ArtifactTypeToken'
    UserToken:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        userId:
          type: string
        active:
          type: boolean
        artifact:
          $ref: '#/components/schemas/ArtifactToken'
        phone:
          type: string
        loginIds:
          type: array
          items:
            type: string
        oseeAdmin:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/IUserGroupArtifactToken'
        token:
          $ref: '#/components/schemas/ArtifactToken'
        guid:
          type: string
        id:
          type: integer
          format: int64
        idString:
          type: string
        idIntValue:
          type: integer
          format: int32
        branch:
          $ref: '#/components/schemas/BranchToken'
        branchIdString:
          type: string
        artifactType:
          $ref: '#/components/schemas/ArtifactTypeToken'
    ExceptionRegistryEntry:
      type: object
      properties:
        primary:
          type: string
        secondary:
          type: string
        valid:
          type: boolean
    IndexResources:
      type: object
      properties:
        gammaIds:
          type: array
          items:
            type: integer
            format: int64
        waitForIndexerToComplete:
          type: boolean
    TransactionBuilder:
      type: object
      properties:
        comment:
          type: string
        txDataReadables:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactReadable'
        branch:
          $ref: '#/components/schemas/BranchId'
        author:
          $ref: '#/components/schemas/UserId'
        commitInProgress:
          type: boolean
        applicabilityReference:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ApplicabilityId'
          writeOnly: true
