/*********************************************************************
 * Copyright (c) 2021 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/
package org.eclipse.osee.mim.types;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.eclipse.osee.framework.core.data.ApplicabilityToken;
import org.eclipse.osee.framework.core.data.ArtifactReadable;
import org.eclipse.osee.framework.core.data.ArtifactToken;
import org.eclipse.osee.framework.core.enums.CoreAttributeTypes;

/**
 * @author Luciano T. Vaglienti
 */
public class InterfaceSubMessageToken extends PLGenericDBObject {
   public static final InterfaceSubMessageToken SENTINEL = new InterfaceSubMessageToken();

   private String InterfaceSubMessageNumber; //required

   private String Description;

   private ApplicabilityToken applicability;

   private boolean autogenerated = false;

   private ArtifactReadable artifactReadable;

   public InterfaceSubMessageToken(ArtifactToken art) {
      this((ArtifactReadable) art);
   }

   public InterfaceSubMessageToken(ArtifactReadable art) {
      this();
      this.setId(art.getId());
      this.setName(art.getName());
      this.setDescription(art.getSoleAttributeValue(CoreAttributeTypes.Description, ""));
      this.setInterfaceSubMessageNumber(art.getSoleAttributeAsString(CoreAttributeTypes.InterfaceSubMessageNumber, ""));
      this.setApplicability(
         !art.getApplicabilityToken().getId().equals(-1L) ? art.getApplicabilityToken() : ApplicabilityToken.SENTINEL);
      this.artifactReadable = art;
   }

   public InterfaceSubMessageToken(Long id, String name, String description, String subMessageNumber, ApplicabilityToken applicabilityToken) {
      super(id, name);
      this.setDescription(description);
      this.setInterfaceSubMessageNumber(subMessageNumber);
      this.setApplicability(applicabilityToken);
   }

   public InterfaceSubMessageToken(Long id, String name) {
      super(id, name);
   }

   public InterfaceSubMessageToken() {
      super();
   }

   /**
    * @return the interfaceSubMessageNumber
    */
   public String getInterfaceSubMessageNumber() {
      return InterfaceSubMessageNumber;
   }

   /**
    * @param interfaceSubMessageNumber the interfaceSubMessageNumber to set
    */
   public void setInterfaceSubMessageNumber(String interfaceSubMessageNumber) {
      InterfaceSubMessageNumber = interfaceSubMessageNumber;
   }

   /**
    * @return the description
    */
   public String getDescription() {
      return Description;
   }

   /**
    * @param description the description to set
    */
   public void setDescription(String description) {
      this.Description = description;
   }

   /**
    * @return the applicability
    */
   public ApplicabilityToken getApplicability() {
      return applicability;
   }

   /**
    * @param applicability the applicability to set
    */
   public void setApplicability(ApplicabilityToken applicability) {
      this.applicability = applicability;
   }

   /**
    * @return the autogenerated
    */
   public boolean isAutogenerated() {
      return autogenerated;
   }

   /**
    * @param autogenerated the autogenerated to set
    */
   public void setAutogenerated(boolean autogenerated) {
      this.autogenerated = autogenerated;
   }

   @JsonIgnore
   public ArtifactReadable getArtifactReadable() {
      return artifactReadable;
   }

}
