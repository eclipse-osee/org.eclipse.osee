/*********************************************************************
 * Copyright (c) 2022 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/
@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($config-or-theme) {
	// Extract the color configuration in case a theme has been passed.
	// This allows consumers to either pass a theme object or a color configuration.
	$config: mat.get-color-config($config-or-theme);

	// Extract the palettes you need from the theme definition.
	$primary: map.get($config, primary);
	$accent: map.get($config, accent);
	$warn: map.get($config, warn);
	$background: map.get($config, background);
	$foreground: map.get($config, foreground);
	$success: map.get($config, success);

	// Define any styles affected by the theme.
	.vert-divider {
		.divider {
			flex-grow: 1;
		}

		.divider-icon {
			cursor: ew-resize;
		}

		display: flex;
		flex-direction: column;
		cursor: ew-resize;
		align-items: center;
		justify-content: center;
	}

	.vert-divider:hover {
		.divider {
			border-right-color: mat.get-color-from-palette($primary, 200);
		}

		.divider-icon {
			color: mat.get-color-from-palette($primary, 400);
		}
	}
}
/* stylelint-disable block-no-empty */
@mixin typography($config-or-theme) {
}
@mixin typography-themed($config-or-theme) {
	$config: mat.get-typography-config($config-or-theme);
}

@mixin theme($theme, $typography) {
	$color: mat.get-color-config($theme);
	$typography: mat.get-typography-config($typography);
	@include typography($theme);

	@if $color {
		@include color($color);
	}
	@if $typography {
		@include typography-themed($typography);
	}
}
