/*********************************************************************
 * Copyright (c) 2023 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/

import {
	ATTRIBUTETYPEIDENUM,
	BASEATTRIBUTETYPEIDENUM,
} from '../../../../types/constants/AttributeTypeId.enum';
export const ENUMATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	ORDINAL: ATTRIBUTETYPEIDENUM.INTERFACEENUMORDINAL,
	ORDINAL_TYPE: ATTRIBUTETYPEIDENUM.INTERFACEENUMORDINALTYPE,
} as const;

export type ENUMATTRIBUTETYPEID =
	(typeof ENUMATTRIBUTETYPEIDENUM)[keyof typeof ENUMATTRIBUTETYPEIDENUM];
export const ENUMSETATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
} as const;

export type ENUMSETATTRIBUTETYPEID =
	(typeof ENUMSETATTRIBUTETYPEIDENUM)[keyof typeof ENUMSETATTRIBUTETYPEIDENUM];

export const PLATFORMTYPEATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	LOGICAL_TYPE: ATTRIBUTETYPEIDENUM.LOGICALTYPE,
	BIT_SIZE: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEBITSIZE,
	ANALOG_ACCURACY: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEANALOGACCURACY,
	BIT_RESOLUTION: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEBITSRESOLUTION,
	COMP_RATE: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPECOMPRATE,
	DEFAULT_VALUE: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEDEFAULTVAL,
	MAX_VALUE: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEMAXVAL,
	MIN_VALUE: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEMINVAL,
	MSB_VALUE: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEMSBVAL,
	UNITS: ATTRIBUTETYPEIDENUM.INTERFACEPLATFORMTYPEUNITS,
} as const;

export type PLATFORMTYPEATTRIBUTETYPEID =
	(typeof PLATFORMTYPEATTRIBUTETYPEIDENUM)[keyof typeof PLATFORMTYPEATTRIBUTETYPEIDENUM];

export const ELEMENTATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	ALTERABLE: ATTRIBUTETYPEIDENUM.INTERFACEELEMENTALTERABLE,
	NOTES: ATTRIBUTETYPEIDENUM.NOTES,
	ENUM_LITERAL: ATTRIBUTETYPEIDENUM.INTERFACEENUMLITERAL,
} as const;

export type ELEMENTATTRIBUTETYPEID =
	(typeof ELEMENTATTRIBUTETYPEIDENUM)[keyof typeof ELEMENTATTRIBUTETYPEIDENUM];

export const ELEMENTARRAYATTRIBUTETYPEIDENUM = {
	...ELEMENTATTRIBUTETYPEIDENUM,
	START: ATTRIBUTETYPEIDENUM.INTERFACEELEMENTSTART,
	END: ATTRIBUTETYPEIDENUM.INTERFACEELEMENTEND,
} as const;

export type ELEMENTARRAYATTRIBUTETYPEID =
	(typeof ELEMENTARRAYATTRIBUTETYPEIDENUM)[keyof typeof ELEMENTARRAYATTRIBUTETYPEIDENUM];

export const STRUCTUREATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	CATEGORY: ATTRIBUTETYPEIDENUM.INTERFACESTRUCTURECATEGORY,
	MIN_SIMULTANEITY: ATTRIBUTETYPEIDENUM.INTERFACEMINSIMULTANEITY,
	MAX_SIMULTANEITY: ATTRIBUTETYPEIDENUM.INTERFACEMAXSIMULTANEITY,
	TASK_FILE_TYPE: ATTRIBUTETYPEIDENUM.INTERFACETASKFILETYPE,
} as const;

export type STRUCTUREATTRIBUTETYPEID =
	(typeof STRUCTUREATTRIBUTETYPEIDENUM)[keyof typeof STRUCTUREATTRIBUTETYPEIDENUM];

export const SUBMESSAGEATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	NUMBER: ATTRIBUTETYPEIDENUM.INTERFACESUBMESSAGENUMBER,
} as const;

export type SUBMESSAGEATTRIBUTETYPEID =
	(typeof SUBMESSAGEATTRIBUTETYPEIDENUM)[keyof typeof SUBMESSAGEATTRIBUTETYPEIDENUM];

export const MESSAGEATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	NUMBER: ATTRIBUTETYPEIDENUM.INTERFACEMESSAGENUMBER,
	PERIODICITY: ATTRIBUTETYPEIDENUM.INTERFACEMESSAGEPERIODICITY,
	RATE: ATTRIBUTETYPEIDENUM.INTERFACEMESSAGERATE,
	WRITE_ACCESS: ATTRIBUTETYPEIDENUM.INTERFACEMESSAGEWRITEACCESS,
	TYPE: ATTRIBUTETYPEIDENUM.INTERFACEMESSAGETYPE,
} as const;

export type MESSAGEATTRIBUTETYPEID =
	(typeof MESSAGEATTRIBUTETYPEIDENUM)[keyof typeof MESSAGEATTRIBUTETYPEIDENUM];

export const CONNECTIONATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	TRANSPORT_TYPE: ATTRIBUTETYPEIDENUM.INTERFACETRANSPORTTYPE, //deprecated
} as const;
export type CONNECTIONATTRIBUTETYPEID =
	(typeof CONNECTIONATTRIBUTETYPEIDENUM)[keyof typeof CONNECTIONATTRIBUTETYPEIDENUM];

export const NODEATTRIBUTETYPEIDENUM = {
	...BASEATTRIBUTETYPEIDENUM,
	ADDRESS: ATTRIBUTETYPEIDENUM.INTERFACENODEADDRESS,
	BACKGROUND_COLOR: ATTRIBUTETYPEIDENUM.INTERFACENODEBGCOLOR,
} as const;
export type NODEATTRIBUTETYPEID =
	(typeof NODEATTRIBUTETYPEIDENUM)[keyof typeof NODEATTRIBUTETYPEIDENUM];

export type MIMATTRIBUTETYPEID =
	| ENUMATTRIBUTETYPEID
	| ENUMSETATTRIBUTETYPEID
	| PLATFORMTYPEATTRIBUTETYPEID
	| ELEMENTATTRIBUTETYPEID
	| ELEMENTARRAYATTRIBUTETYPEID
	| STRUCTUREATTRIBUTETYPEID
	| SUBMESSAGEATTRIBUTETYPEID
	| MESSAGEATTRIBUTETYPEID
	| CONNECTIONATTRIBUTETYPEID
	| NODEATTRIBUTETYPEID;
