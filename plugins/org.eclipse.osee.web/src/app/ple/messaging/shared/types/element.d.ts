import type { applic } from '@osee/shared/types/applicability';

/*********************************************************************
 * Copyright (c) 2021 Boeing
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     Boeing - initial API and implementation
 **********************************************************************/
import type { hasChanges } from '@osee/shared/types/change-report';
import { PlatformType } from './platformType';
export interface element {
	[index: string]: any;
	id: string;
	name: string;
	description: string;
	notes: string;
	interfacePlatformTypeDescription?: string;
	interfacePlatformTypeMinval?: string;
	interfacePlatformTypeMaxval?: string;
	elementSizeInBytes?: number;
	elementSizeInBits?: number;
	interfaceElementIndexEnd: number;
	interfaceElementIndexStart: number;
	interfaceElementAlterable: boolean;
	interfaceDefaultValue: string;
	units?: string;
	enumLiteral: string;
	platformType: PlatformType;
	beginWord?: number;
	beginByte?: number;
	endWord?: number;
	endByte?: number;
	autogenerated?: boolean;
	logicalType?: string;
	applicability?: applic;
}
export interface elementWithPathsAndButtons extends element {
	paths: string[];
	buttonNames: string[];
}

export interface elementWithChanges extends element {
	added: boolean;
	deleted: boolean;
	changes: hasChanges<element>;
}

export interface elementImportToken
	extends Pick<
		element,
		| 'id'
		| 'name'
		| 'description'
		| 'notes'
		| 'enumLiteral'
		| 'interfaceDefaultValue'
		| 'interfaceElementAlterable'
		| 'interfaceElementIndexEnd'
		| 'interfaceElementIndexStart'
	> {}
